import java.util.*;
import java.text.*;
import java.math.*;
public class Hackerrank_KK {

	public static void main(String[] args) {
		

		    /*
		     * Complete the 'simpleArraySum' function below.
		     *
		     * The function is expected to return an INTEGER.
		     * The function accepts INTEGER_ARRAY ar as parameter.
		     */

		   
		    // Write your code here
//		    Scanner sc = new Scanner(System.in);
//		    int size = sc.nextInt();
//		    int[] arr;
//		    arr = new int[size];
//		    for(int i=0; i<size; i++){
//		        arr[i]= sc.nextInt();
//		    }
//		    int sum=0;
//		    for(int i=0; i<size; i++){
//		        sum = sum + arr[i];
//		        // return sum;
//		    }
//		    System.out.println(sum);
//		    
//		    
//		 // allowed
//	        int[] array = new int[3];
//	        array[0]= 1;
//	        array[1]= 10;
//	        array[2]= 20;
//	        
//	 
//	        // allowed, however, need to be initialized
//	        Hackerrank_KK[] array1 = new Hackerrank_KK[3];
//	       
//	        
//	 
//	        // not allowed (Uncommenting below line causes
//	        // compiler error)
//	        // ArrayList<char> arrL = new ArrayList<char>();
//	 
//	        // Allowed
//	        ArrayList<Integer> arrL1 = new ArrayList<>();
//	        ArrayList<String> arrL2 = new ArrayList<>();
//	        ArrayList<Object> arrL3 = new ArrayList<>();
//	       
//	        System.out.println("Successfully compiled and executed");
		    
//	        
//	        Scanner sc = new Scanner(System.in);
//	        System.out.println("Enter value/size of  array one by one : ");
//	        int size = sc.nextInt();
//	        int[] a = new int[size];
//	        int[] b = new int[size];
//	        System.out.println("Enter elements in array : ");
//	        for(int i=0; i<3;i++) {
//	        	a[i]= sc.nextInt();
//	        	b[i]= sc.nextInt();
//	        }
//	        int alicePoints = 0, bobPoints =0;
//	        for(int i=0; i<3; i++){
//	            if(a[i]>b[i]) alicePoints+=1;
//	            else if(a[i]<b[i]) bobPoints+=1;
//	            else continue;
//	        }
//	        int[] arr = new int[2];
//	        arr[0] = alicePoints;
//	        arr[1] = bobPoints;
//	        System.out.println(Arrays.toString(arr));
		    
		   
//	        import java.util.*;
//	        import java.io.*;
//	        import java.text.*;
//	        import java.math.*;
//	        import java.util.regex.*;
//
//	        public class MyClass{
//	            public static void main(String args[]){
//	                Scanner sc = new Scanner(System.in);
//	                int size = sc.nextInt();
//	                int[] a = new int[size];
//	                int[] b = new int[size];
//	                int alicePoints = 0, bobPoints =0;
//	                for(int i=0; i<3; i++){
//	                    if(a[i]>b[i]) alicePoints+=1;
//	                    else if(a[i]<b[i]) bobPoints+=1;
//	                    // else continue;
//	                }
//	                int[] arr = new int[2];
//	                arr[0] = alicePoints;
//	                arr[1] = bobPoints;
//	                System.out.println(Arrays.toString(arr));
//	                
//	                
//	                
//	            }
//	        }

		
		// Compare the triplet - hackerrank solution my code
//		int alicePoints=0, bobPoints =0;
//        for(int i=0; i<3; i++){
//            if(a.get(i)> b.get(i)) alicePoints+=1;
//            else if(a.get(i)<b.get(i)) bobPoints+=1;
//            else continue;
//        }
//        List<Integer> rest = new ArrayList<>();
//        rest.add(alicePoints);
//        rest.add(bobPoints);
//        return rest;
//		
//		System.out.println("Enter size of arraylist : ");
//		Scanner sc = new Scanner(System.in);
//		int size= sc.nextInt();
//		ArrayList<Integer> arr = new ArrayList<>();
//		
//		System.out.println("Enter element in arraylist of " +size+ " Size : ");
//		for(int i=0; i<size;i++) {
//			int element = sc.nextInt();
//			arr.add(element);
//		}
//		
//		double flag = -1;
//        double postveCount =0, negCount=0, zeroCount=0;
//        for(int i=0; i<arr.size();i++){
//            if(flag * arr.get(i) < 0) { // represent positive
//                 postveCount++;
//                 
//            } 
//            if(flag * arr.get(i) > 0) { // represent Negative
//                 negCount++;
//                 
//            } 
//            if(flag * arr.get(i)== 0) { // represent Zero
//                 zeroCount++;
//                 
//            }    
//        }
//        double sizeDouble = (double)arr.size();
//        
//        System.out.println("postveCount : "+ postveCount/sizeDouble); 
//        System.out.println("negCount : "+ negCount/sizeDouble); 
//        System.out.println("zeroCount : "+ zeroCount/sizeDouble); 
        
//        
//        System.out.println("Enter size of arraylist : ");
//        Scanner sc = new Scanner(System.in);
//        int size = sc.nextInt();
//        ArrayList<Integer> arr = new ArrayList<>();
//
//        System.out.println("Enter elements in the arraylist of size " + size + ": ");
//        for (int i = 0; i < size; i++) {
//            int element = sc.nextInt();
//            arr.add(element);
//        }
//
//        long flag = -1;
//        long positiveCount = 0, negativeCount = 0, zeroCount = 0;
//
//        for (int i = 0; i < arr.size(); i++) {
//            if (flag * arr.get(i) > 0) {
//                positiveCount++;
//            } else if (flag * arr.get(i) < 0) {
//                negativeCount++;
//            } else {
//                zeroCount++;
//            }
//        }
//
//        double sizeDouble = (double) size;
//        System.out.println("Positive count: " + positiveCount / sizeDouble);
//        System.out.println("Negative count: " + negativeCount / sizeDouble);
//        System.out.println("Zero count: " + zeroCount / sizeDouble);

		
		System.out.println("Enter size of arraylist : ");
		Scanner sc = new Scanner(System.in);
		int size= sc.nextInt();
		ArrayList<Integer> arr = new ArrayList<>();
		
		System.out.println("Enter element in arraylist of " +size+ " Size : ");
		for(int i=0; i<size;i++) {
			int element = sc.nextInt();
			arr.add(element);
		}
		
		double sizeDouble = arr.size();
//		double flag = -1;
        double postveCount =0, negCount=0, zeroCount=0;
        for(int i=0; i<arr.size();i++){
            if(arr.get(i) > 0) { // represent positive
                 postveCount++;
                 
            } 
            if(arr.get(i) < 0) { // represent Negative
                 negCount++;
                 
            } 
            if(arr.get(i)== 0) { // represent Zero
                 zeroCount++;
                 
            }    
        }
        DecimalFormat df = new DecimalFormat("#.######");
        df.setRoundingMode(RoundingMode.HALF_UP);
        
        System.out.println("postveCount : "+ df.format(postveCount/sizeDouble)); 
        System.out.println("negCount : "+ df.format(negCount/sizeDouble)); 
        System.out.println("zeroCount : "+ df.format(zeroCount/sizeDouble)); 

	}

}
